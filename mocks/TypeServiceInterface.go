// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import models "github.com/go-graphql/models"

// TypeServiceInterface is an autogenerated mock type for the TypeServiceInterface type
type TypeServiceInterface struct {
	mock.Mock
}

// FetchAll provides a mock function with given fields: typeID
func (_m *TypeServiceInterface) FetchAll(typeID int) ([]*models.Type, error) {
	ret := _m.Called(typeID)

	var r0 []*models.Type
	if rf, ok := ret.Get(0).(func(int) []*models.Type); ok {
		r0 = rf(typeID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Type)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(typeID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FetchAllByPokemonID provides a mock function with given fields: pokemonID
func (_m *TypeServiceInterface) FetchAllByPokemonID(pokemonID int) ([]*models.Type, error) {
	ret := _m.Called(pokemonID)

	var r0 []*models.Type
	if rf, ok := ret.Get(0).(func(int) []*models.Type); ok {
		r0 = rf(pokemonID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Type)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(pokemonID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
